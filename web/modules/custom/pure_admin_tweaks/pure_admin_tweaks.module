<?php

/**
 * @file
 * Contains pure_admin_tweaks.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function pure_admin_tweaks_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the pure_admin_tweaks module.
    case 'help.page.pure_admin_tweaks':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Admin Tweaks') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function pure_admin_tweaks_theme() {
  $theme = [];

  $theme['pure_admin_tweaks'] =  [
      'render element' => 'children',
  ];


  $theme['paragraph__row'] = [
      'base hook' => 'paragraph',
  ];

  $theme['paragraph__column'] = [
    'base hook' => 'paragraph',
  ];

  return $theme;

}



/**
 * Implements hook_page_attachments().
 */
function pure_admin_tweaks_page_attachments(array &$attachments) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  if ($theme == 'seven') {
    $attachments['#attached']['library'][] = 'pure_admin_tweaks/admin_tweaks';
  }
}


/**
 * Implements hook_preprocess_HOOK() for field_multiple_value_form().
 */
function pure_admin_tweaks_preprocess_field_multiple_value_form(&$variables) {
  if (!empty($variables['table']['#header']) && isset($variables['table']['#rows'])) {

    // Add the paragraph type as a class to every row.
    if (isset($variables['element'][0]['#paragraph_type'])) {
      foreach ($variables['table']['#rows'] as $key => $row) {
        if( isset($row['data'][1]['data']['#paragraph_type']) && $row['data'][1]['data']['#paragraph_type'] == 'row' ){
          //print_array($row);
          #defaults_loaded
          // dsm($row);
          // TODO: can we get the field_layout content to style the row content
        }
        if (isset($row['data'][1]['data']['#paragraph_type'])) {
          $variables['table']['#rows'][$key]['class'][] = 'paragraph-row';
        }
      }
    }
  }
}


function pure_admin_tweaks_field_widget_paragraphs_form_alter(&$element, &$form_state, $context) {


  if ( isset($element['#paragraph_type']) && $element['#paragraph_type'] == 'row' ) {
    if( isset($element['subform']['field_layout']['widget']['#default_value'][0]) ){
      $row_layout = $element['subform']['field_layout']['widget']['#default_value'][0];
      $row_layout_class = "row-layout--" . $row_layout;
      $element['subform']['#attributes']['class'][] = $row_layout_class;
    }
/*
    if( isset($element['preview']['#paragraph']) && $element['preview']['#paragraph']->hasField('field_layout') ){
      $element['subform']['#attributes']['class'][] = "layout-test";
      $row_layout = $element['preview']['#paragraph']->get('field_layout')->getValue()[0]['value'];
      $row_layout_class = "row-layout--" . $row_layout;
      $element['subform']['#attributes']['class'][] = $row_layout_class;

      $element['#prefix'] .= '<div class="' . $row_layout_class . '">';
      $element['#suffix'] .= '</div>';

    }*/
  }

  //add class to identify paragraph-top (hide info about columns)
  if ( isset($element['#paragraph_type']) ) {
    $element['top']['#attributes']['class'][] = 'paragraph-top--' . $element['#paragraph_type'] ;
  }
}



/**
 * Implements hook_contextual_links_view_alter().
 *
 * Open the paragraph_edit contextual links in a modal dialog. (on frontend)
 */
function pure_admin_tweaks_contextual_links_view_alter(&$element, $items) {

  if (isset($element['#links']['paragraphs-editedit-form'])) {
    $element['#links']['paragraphs-editedit-form']['attributes'] = [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'dialog',
      'data-dialog-renderer' => 'modal',
      'data-dialog-options' => json_encode(['width' => '50%'])
    ];
    //$element['#attached'] => ['library' => ['core/drupal.dialog.ajax']]
    $element['#attached']['library'][] = 'core/drupal.dialog.ajax';
  }

  if (isset($element['#links']['paragraphs-editclone-form'])) {
    $element['#links']['paragraphs-editclone-form']['attributes'] = [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'dialog',
      'data-dialog-renderer' => 'modal',
      'data-dialog-options' => json_encode(['width' => '50%']),
    ];
  }

  if (isset($element['#links']['paragraphs-editdelete-form'])) {
    $element['#links']['paragraphs-editdelete-form']['attributes'] = [
      'class' => ['use-ajax'],
      'data-dialog-type' => 'dialog',
      'data-dialog-renderer' => 'modal',
    ];
  }

}
